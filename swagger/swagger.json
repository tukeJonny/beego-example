{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/todo/": {
            "get": {
                "tags": [
                    "todo"
                ],
                "description": "search todos by title",
                "operationId": "TodoController.SearchByTitle",
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "description": "todo title",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Todo"
                        }
                    },
                    "403": {
                        "description": "title is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "todo"
                ],
                "description": "create a todo",
                "operationId": "TodoController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "created todo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.Todo.Id"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/todo/{todoId}": {
            "get": {
                "tags": [
                    "todo"
                ],
                "description": "retrieve a todo",
                "operationId": "TodoController.Retrieve",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Todo"
                        }
                    },
                    "403": {
                        "description": ":todoId is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "todo"
                ],
                "description": "update a todo",
                "operationId": "TodoController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "todoId",
                        "description": "The todoID you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "todo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Todo"
                        }
                    },
                    "403": {
                        "description": ":todoId is empty"
                    }
                }
            },
            "delete": {
                "tags": [
                    "todo"
                ],
                "description": "delete a todo",
                "operationId": "TodoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "todoId",
                        "description": "The todoId you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success"
                    },
                    "403": {
                        "description": "todoId is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ModelBase": {
            "title": "ModelBase",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.Todo": {
            "title": "Todo",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer",
                    "format": "int64"
                },
                "Title": {
                    "type": "string"
                }
            }
        }
    }
}